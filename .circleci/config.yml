version: 2
jobs:
  checkstyle:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-28
    steps:
      - checkout
      - run: ./gradlew spotlessCheck
  assemble:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-28
    environment:
      JVM_OPTS: -Xmx3200m
      MINIFY_ENABLED: true
    steps:
      - checkout
      - run: echo $GOOGLE_SERVICES_JSON_KEY | base64 --decode --ignore-garbage > ${HOME}/code/app/google-services.json
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run: ./gradlew assembleDevelopmentDebug
  junit_tests:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-28
    environment:
      JVM_OPTS: -Xmx3200m
      MINIFY_ENABLED: true
    steps:
      - checkout
      - run: echo $GOOGLE_SERVICES_JSON_KEY | base64 --decode --ignore-garbage > ${HOME}/code/app/google-services.json
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Run Tests
          command: ./gradlew testDevelopmentDebug
      - store_artifacts:
          path: app/build/reports
          destination: reports
      - store_test_results:
          path: app/build/test-results
  ui_tests:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-28
    environment:
      MINIFY_ENABLED: false
    steps:
      - checkout
      - run: echo $GCLOUD_SERVICE_KEY | base64 --decode --ignore-garbage > ${HOME}/gcloud-service-key.json
      - run: echo $GOOGLE_SERVICES_JSON_KEY | base64 --decode --ignore-garbage > ${HOME}/code/app/google-services.json
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Generate Debug APK
          command: ./gradlew :app:assembleDevelopmentDebug
      - run:
          name: Generate Test APK
          command: ./gradlew :app:assembleDevelopmentDebugAndroidTest
      - run:
          name: Run firebase android tests
          command: bash .circleci/firebase_script.sh
      - store_artifacts:
          path: app/build/outputs/apk
  distribute_release:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-28
    environment:
      MINIFY_ENABLED: true
    steps:
      - checkout
      - run: echo $GCLOUD_SERVICE_KEY | base64 --decode --ignore-garbage > ${HOME}/gcloud-service-key.json
      - run: echo $GOOGLE_SERVICES_JSON_KEY | base64 --decode --ignore-garbage > ${HOME}/code/app/google-services.json
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Distribute app for test
          environment:
            GOOGLE_APPLICATION_CREDENTIALS: ${HOME}/gcloud-service-key.json
          command: ./gradlew assembleProductionRelease appDistributionUploadProductionRelease
  deploy_bundle:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-28
    environment:
      MINIFY_ENABLED: true
    steps:
      - checkout
      - run: echo $GOOGLE_SERVICES_JSON_KEY | base64 --decode --ignore-garbage > ${HOME}/code/app/google-services.json
      - run: echo $PLAY_STORE_PUBLISHING_ACCOUNT > ${HOME}/code/app/publish_credentials.json
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Publish Production Bundle
          command: ./gradlew publishBundle

workflows:
  version: 2
  distribute-app:
    jobs:
      - distribute_release
#  assemble-test-and-deploy:
#    jobs:
#      - checkstyle:
#          filters:
#            tags:
#              only: /(?:0|[1-9]\d*)\.(?:0|[1-9]\d*)\.(?:0|[1-9]\d*)(-(alpha|beta))?/
#      - assemble:
#          requires:
#            - checkstyle
#          filters:
#            tags:
#              only: /(?:0|[1-9]\d*)\.(?:0|[1-9]\d*)\.(?:0|[1-9]\d*)(-(alpha|beta))?/
#      - junit_tests:
#          requires:
#            - assemble
#          filters:
#            tags:
#              only: /(?:0|[1-9]\d*)\.(?:0|[1-9]\d*)\.(?:0|[1-9]\d*)(-(alpha|beta))?/
#      - ui_tests:
#          requires:
#            - assemble
#          filters:
#            tags:
#              only: /(?:0|[1-9]\d*)\.(?:0|[1-9]\d*)\.(?:0|[1-9]\d*)(-(alpha|beta))?/
#      - deploy_bundle:
#          requires:
#            - junit_tests
#            - ui_tests
#          filters:
#            tags:
#              only: /(?:0|[1-9]\d*)\.(?:0|[1-9]\d*)\.(?:0|[1-9]\d*)(-(alpha|beta))?/
#            branches:
#              ignore: /.*/