apply plugin: 'com.android.library'

android {
    publishNonDefault true

    testOptions {
        unitTests.returnDefaultValues = true
    }


    def globalConfiguration = rootProject.extensions.getByName("ext")
    compileSdkVersion globalConfiguration.getAt("androidCompileSdkVersion")
    buildToolsVersion globalConfiguration.getAt("androidBuildToolsVersion")

    defaultConfig {
        minSdkVersion globalConfiguration.getAt("androidMinSdkVersion")
        targetSdkVersion globalConfiguration.getAt("androidTargetSdkVersion")
        versionCode globalConfiguration.getAt("androidVersionCode")
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }

    productFlavors {
        prod {}
        dev {}
    }

}

dependencies {
    def dataDependencies = rootProject.ext.dataDependencies
    def testDependencies = rootProject.ext.dataTestDependencies

    compile project(':domain')

    annotationProcessor dataDependencies.daggerCompiler

    provided dataDependencies.javaxAnnotation
    compile dataDependencies.dagger
    compile dataDependencies.gson
    compile dataDependencies.rxJava
    compile dataDependencies.rxAndroid
    compile dataDependencies.jodaTime
    compile dataDependencies.retrofit
    compile dataDependencies.retrofitGson
    compile dataDependencies.retrofitInterceptor
    compile dataDependencies.okio
    compile dataDependencies.okHttp
    compile dataDependencies.retrofitRxAdapter
    compile dataDependencies.glide
    compile dataDependencies.gcmServices
    compile dataDependencies.gcmAuth
    compile (dataDependencies.socketIO) {
        exclude group: 'org.json', module: 'json'
    }
    compile dataDependencies.okhttpWs
    compile dataDependencies.webRTC
    compile dataDependencies.timber


    testCompile testDependencies.junit
    testCompile testDependencies.assertj
    testCompile testDependencies.mockito
    testCompile testDependencies.robolectric
    testCompile testDependencies.socketIO

}