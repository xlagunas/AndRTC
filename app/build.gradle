apply plugin: 'com.android.application'

android {
    def globalConfiguration = rootProject.extensions.getByName("ext")

    compileSdkVersion globalConfiguration.getAt("androidCompileSdkVersion")
    buildToolsVersion globalConfiguration.getAt("androidBuildToolsVersion")

    defaultConfig {
        applicationId "cat.xlagunas.andrtc"
        versionCode 7
        versionName "1.1.7"

        minSdkVersion globalConfiguration.androidMinSdkVersion
        targetSdkVersion globalConfiguration.androidTargetSdkVersion

        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner globalConfiguration.testInstrumentationRunner
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    signingConfigs {
        debug {
            storeFile file('../buildsystem/debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors {
        prod {
            manifestPlaceholders appName: "@string/app_name_prod"
        }
        dev {
            manifestPlaceholders appName: "@string/app_name_dev"
            applicationIdSuffix ".dev"
        }
    }

    lintOptions {
        checkReleaseBuilds false
        // set to true to turn off analysis progress reporting by lint
        quiet false
        // if true, stop the gradle build if errors are found
        abortOnError true
        // if true, only report errors
        ignoreWarnings false
        
        warning 'InvalidPackage'
    }
}

configurations {
    prodDebugCompile
    devDebugCompile
    prodReleaseCompile
    devReleaseCompile

    androidTestCompile.exclude group: 'com.android.support', module: 'support-annotations'

}

dependencies {
    def presentationDependencies = rootProject.ext.presentationDependencies
    def presentationTestDependencies = rootProject.ext.presentationTestDependencies
    def developmentDependencies = rootProject.ext.developmentDependencies

    prodDebugCompile project(path: ':data', configuration: 'prodDebug')
    prodReleaseCompile project(path: ':data', configuration: 'prodRelease')

    devDebugCompile project(path: ':data', configuration: 'devDebug')
    devReleaseCompile project(path: ':data', configuration: 'devRelease')

    compile project(':domain')
    compile project(':data')

    annotationProcessor presentationDependencies.daggerCompiler
    annotationProcessor presentationDependencies.butterKnifeCompiler
    annotationProcessor presentationDependencies.autoFactory

    compile presentationDependencies.dagger
    compile presentationDependencies.butterKnife
    compile presentationDependencies.recyclerView
    compile presentationDependencies.rxJava
    compile presentationDependencies.rxAndroid
    compile presentationDependencies.materialSupport
    compile presentationDependencies.materialSupport
    compile presentationDependencies.cardViewSupport
    compile presentationDependencies.appCompatSupport
    compile presentationDependencies.recyclerSupport
    compile presentationDependencies.supportV4
    compile presentationDependencies.gcmServices
    compile presentationDependencies.gcmAuth
    compile presentationDependencies.circleImageView
    compile presentationDependencies.glide
    compile presentationDependencies.percentSupport
    compile presentationDependencies.timber
    compile developmentDependencies.leakCanary

    provided presentationDependencies.javaxAnnotation

    testCompile presentationTestDependencies.mockito

    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.2'
    androidTestCompile 'com.android.support.test.espresso:espresso-intents:2.2.2'
    androidTestCompile 'com.android.support.test:runner:0.5'
}

apply plugin: 'com.google.gms.google-services'






